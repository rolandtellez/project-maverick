{"version":3,"sources":["components/Login/login.js","components/Search/search.js","components/Results/results.js","components/NoMatch/noMatch.js","App.js","serviceWorker.js","index.js"],"names":["Login","react_default","a","createElement","className","htmlFor","type","id","placeholder","class","href","role","Component","Search","Results","NoMatch","App","react_router_dom","react_router","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ad62ee67.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport \"./login.css\";\n\n\nclass Login extends Component {\n\n    render() {\n        return (\n            <div className=\"container\">\n\n                <div className=\"user-input\">\n                    <h4>Sign in to continue</h4>\n\n                    <form>\n\n                        <div className=\"form-group\">\n\n                            <label htmlFor=\"empId\">Employee ID</label>\n                            <input type=\"text\" className=\"form-control\" id=\"empIdInput\" placeholder=\"Enter ID\"/>\n\n                        </div>\n\n                        <div className=\"form-group\">\n\n                            <label htmlFor=\"empPassword\">Password</label>\n                            <input type=\"password\" className=\"form-control\" id=\"passwordInput\" placeholder=\"Password\"/>\n\n                        </div>\n\n                        <a class=\"btn btn-secondary\" href=\"/Search\" role=\"button\" type=\"submit\" id=\"login-btn\">Login</a>\n\n                    </form>\n\n                </div>\n    \n            </div>\n          );\n\n    }\n  \n}\n\nexport default Login;","import React, { Component } from 'react';\nimport \"./search.css\";\n// import API from \"../utils/API\";\n// import SearchBtn from \"../Search/SearchBtn\";\n\n\nclass Search extends Component {\n\n    // state = {\n    //     airline: \"\",\n    //     flight: \"\"\n    //   };\n\n    // handleFormSubmit = event => {\n    //     event.preventDefault();\n    //     if (this.state.airline && this.state.flight) {\n    //       API.getFlightInfo({\n    //         airline: this.state.airline,\n    //         flight: this.state.flight\n    //       })\n    //         .then(res => this.loadInfo())\n    //         .catch(err => console.log(err));\n    //     }\n    //   };\n\n    render() {\n        return (\n            <div className=\"container\">\n\n                <div id=\"user-input\">\n                    \n                    <form>\n                        <h4>Search for a flight</h4>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"selectAirline\">Select Airline</label>\n                            <select className=\"form-control\" id=\"select-airline\">\n                                <option>American Airlines - AA</option>\n                                <option>British Airways - BA</option>\n                                <option>Cathay Pacific - CX</option>\n                                <option>Etihad Airways - EY</option>\n                                <option>Hawaiian Airlines - HA</option>\n                                <option>Qantas - QF</option>\n                                <option>Qatar Airways - QR</option>\n                                <option>United Airlines - UA</option>\n                                <option>Virgin Atlantic Airways - VS</option>\n                                <option>Virgin Australia - VA</option>\n                            </select>\n                        </div>\n\n                         <div className=\"form-group\">\n                            <label htmlFor=\"flightNumber\">Flight Number</label>\n                            <input type=\"text\" className=\"form-control\" id=\"flight-number\" placeholder=\"----------------\"/>\n                        </div>\n\n                        <a class=\"btn btn-secondary\" href=\"/Results\" role=\"button\" type=\"submit\">Submit</a>\n\n                    </form>\n\n                </div>\n\n            </div>\n          );\n\n    }\n  \n}\n\nexport default Search;","import React, { Component } from 'react';\nimport \"./results.css\";\n\n\nclass Results extends Component {\n\n    render() {\n        return (\n            <div className=\"container\">\n\n                <div className=\"row\">\n\n                    <div className=\"col\">\n                        Flight Information\n                </div>\n\n                    <div className=\"col\">\n                        Medical Kit Contents\n                </div>\n\n                    <div className=\"col\">\n                        Procedures\n                </div>\n\n                </div>\n                <a href=\"/search\">‚Üê Back to search</a>\n            </div>\n        );\n\n    }\n\n}\n\nexport default Results;","import React, { Component } from 'react';\n// import \"./NoMatch.css\";\n\nclass NoMatch extends Component {\n\n  render() {\n      return (\n          <div className=\"container\">\n\n              <div className=\"user-input\">\n                  <h4>404 Page Not Found</h4>\n                  \n              </div>\n  \n          </div>\n        );\n\n  }\n\n}\n\nexport default NoMatch;\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n// import logo from './logo.svg';\nimport './App.css';\nimport Login from './components/Login/login.js'\nimport Search from './components/Search/search.js'\nimport Results from './components/Results/results.js'\nimport NoMatch from './components/NoMatch/noMatch.js'\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <Switch>\n          <Route exact path=\"/\" component={Login} />\n          <Route exact path=\"/login\" component={Login} />\n          <Route exact path=\"/search\" component={Search} />\n          <Route exact path=\"/results\" component={Results} />\n          <Route component={NoMatch} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}